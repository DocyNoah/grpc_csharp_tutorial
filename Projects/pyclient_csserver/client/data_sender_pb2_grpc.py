# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import data_sender_pb2 as data__sender__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DataSenderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendData = channel.unary_unary(
                '/ai_economist.DataSender/SendData',
                request_serializer=data__sender__pb2.Data.SerializeToString,
                response_deserializer=data__sender__pb2.Status.FromString,
                )
        self.SendDataNoReturn = channel.unary_unary(
                '/ai_economist.DataSender/SendDataNoReturn',
                request_serializer=data__sender__pb2.Data.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class DataSenderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendDataNoReturn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataSenderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendData': grpc.unary_unary_rpc_method_handler(
                    servicer.SendData,
                    request_deserializer=data__sender__pb2.Data.FromString,
                    response_serializer=data__sender__pb2.Status.SerializeToString,
            ),
            'SendDataNoReturn': grpc.unary_unary_rpc_method_handler(
                    servicer.SendDataNoReturn,
                    request_deserializer=data__sender__pb2.Data.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai_economist.DataSender', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataSender(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai_economist.DataSender/SendData',
            data__sender__pb2.Data.SerializeToString,
            data__sender__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendDataNoReturn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai_economist.DataSender/SendDataNoReturn',
            data__sender__pb2.Data.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
